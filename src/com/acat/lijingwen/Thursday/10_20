*****************************
网络编程TCP/UDP
*****************************


基于TCP协议的网络编程
TCP：传输控制协议  被称为一种端对端协议，是一种面向连接的可靠的，给予字节流的传输层的通信协议，可以连续传输大量的数据。
步骤：
服务器程序的工作过程包含以下五个基本步骤：
1.使用ServerSocket(int port)创建一个服务器端套接字，并绑定到指定端口上。用于监听客户端的请求。
2.调用accept()方法：监听连接请求 如果客户端请求链接，则接受链接 创建于该客户端的通信套接字对象，否则该方法一直处于等待状态。
3.调用该socket对象的getOutputStream() 和getInputStream():获取输出流和输入流  开始网络数据的发送和接收。
4.关闭Socket对象， 某客户端访问结束，关闭与之通信的套接字。
5.关闭ServerSocket:如果不再接收任何客户端的连接的话，调用close()进行关闭
客户端socket的工作过程包含以下四个基本的步骤：
6.创建socket：根据指定服务断的IP地址或端口号构造socket 类对象，创建的同时会自动向服务器方发起连接。若服务器端响应，则建立哭护短到服务器的通信线路。若链接失败，会出现异常。
7.打开连接到socket的输入/输出流：使用getInputStream()方法获得输入流，使用getOutput
Stream()方法获得输出流 ，进行数据传输
8.进行读写操作：通过输入流读取服务器发送的信息，通过输出流将信息发送给服务器
9.关闭socket：断开客户端到服务器的链接
UDP：是一个无连接的传输层协议，提供面向事物的简单不可靠的信息传输服务
特点：将数据，源，目的封装成数据包，不需要建立连接
      每个数据报的大小限制在64K

      因无需连接，故不可靠，速度快

流程：
1.建立发送端的DatagramSocket，需要制定本端的端口号
2.建立数据包DatagramPacket
   数据
   接收端的IP地址
   接收端的端口号
3.调用Socket的发送方法
4.关闭socket


UDP协议的使用场景：即时通讯   在线视频  网络语音电话
类DatagramSocket和DatagramPacket实现了基于UDP协议网络程序

DatagramPacket：数据包对象    作用：用于封装要发送或接收的数据   比喻：集装箱
构造方法：1.DatagramPacket（byte[] buf,int length,inetAddress,int port）
DatagramSocket：发送或接受对象   作用：用来发送数据包或接收数据包   比喻：码头
构造方法：Datagramsocket()