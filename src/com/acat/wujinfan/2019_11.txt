2019.11.01-03(周五,周六,周日)
    这周休假一天，放了3天假。
    周六去跟大学室友去望京转了会，吃了个饭小聚一下，看了场电影《少年的你》。
    周日下午帮同学搬家去了。然后瞎转悠转到了软件园那边，那块大公司挺多的，也挺震撼的，是真的震撼啊......

2019.11.04(周一)
    1.早上来公司写周报,参加部门的晨会。
    2.业务中遇到一个小问题，对于pad端显示的固定字段，统一处理是在后端写死，再传给pad端，这样后端就保存了最原始的镜像，如果是在
      pad端生成的话，就不会过后端，这样后端就不会保存这个数据。但是在看个代码之后，和这个业务相同的业务之前是这样的，直播的固定字
      段是在后端生成的，但是备播的字段却是在前段那边生成的，有点懵逼，不知道这个是为啥。
    3.给显示总积分寻找最优的方法。
    4.测试微服务之间接口调用:
      remote(父项目，也是被需要调用接口的项目),防止端口冲突，port为8899,https://github.com/rocky1996/remote
      local(子项目，也是需要调用别人接口的项目,防止端口冲突，port为8080,https://github.com/rocky1996/local

      local项目中通过feign调用远程接口，此时并没有设置熔断时间，默认为1000毫秒。
      local项目中添加eureka注册中心等环节。
    5.之前很少使用的一个git的命令，git本地提交到缓存区,如果想退回，使用命令git reset HEAD^即可

2019.11.05(周三)
    继续昨日的搭建:
        1.在昨日的基础上在服务里面搭建日志服务器，收集日志，按"天"来记录。

    Spring总结:
        1.Spring作用在类上的注解又@Component,@Responsity,@Service,@Controller;而@Autowired和@Resource用来修饰字段,构造函
          数或者设置方法,并做注入的。
        2.当注解作用在类上时，表明这些类是交给spring容器进行管理的，而当使用@Autowired和@Resource时，表明我需要某个属性、方法或
          字段，但是并不需要我自己去new一个，只需要使用注解， spring容器会自动的将我需要的属性、方法或对象创造出来。这就是通常所说
          的依赖注入和控制反转。
        3.@Component对那些比较中立的类进行凝视,随便一个类就可以,有了这个注解就表示,把这个类交给Spring容器去管理。

    处理线上问题:
        之前别人写的代码,属于互动情况考虑不全的问题,但是代码版本迭代太多,代码稍微有点乱,修复起来有点困难,好在在导师的帮助
        下定位出了问题,下一步进行修复。
    晚上回去跑圈去。
